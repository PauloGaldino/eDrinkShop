// <auto-generated />
using System;
using INFRASTRUCTURE.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace INFRASTRUCTURE.Migrations
{
    [DbContext(typeof(CatalogoContext))]
    [Migration("20190323114924_Inicial")]
    partial class Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("Relational:Sequence:.catalogo_brando_hilo", "'catalogo_brando_hilo', '', '1', '10', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.catalogo_hilo", "'catalogo_hilo', '', '1', '10', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.catalogo_tipo_hilo", "'catalogo_tipo_hilo', '', '1', '10', '', '', 'Int64', 'False'")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("APPLICATION.CORE.Entities.CarrinhoAgregado.Carrinho", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompraId");

                    b.HasKey("Id");

                    b.ToTable("Carrinhos");
                });

            modelBuilder.Entity("APPLICATION.CORE.Entities.CarrinhoAgregado.CarrinhoItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CarrinhoId");

                    b.Property<int>("CatalogoItemId");

                    b.Property<decimal>("PrecoUnitario");

                    b.Property<int>("Quantidade");

                    b.HasKey("Id");

                    b.HasIndex("CarrinhoId");

                    b.ToTable("CarrinhoItems");
                });

            modelBuilder.Entity("APPLICATION.CORE.Entities.CatalogoItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:HiLoSequenceName", "catalogo_hilo")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<int>("CatalogoMarcaId");

                    b.Property<int>("CatalogoTipoId");

                    b.Property<string>("DescricaoCurta");

                    b.Property<string>("DescricaoLonga");

                    b.Property<string>("FotoUri");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<decimal>("Preco");

                    b.HasKey("Id");

                    b.HasIndex("CatalogoMarcaId");

                    b.HasIndex("CatalogoTipoId");

                    b.ToTable("Catalogo");
                });

            modelBuilder.Entity("APPLICATION.CORE.Entities.CatalogoMarca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:HiLoSequenceName", "catalogo_brando_hilo")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("CatalogoMarca");
                });

            modelBuilder.Entity("APPLICATION.CORE.Entities.CatalogoTipo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:HiLoSequenceName", "catalogo_tipo_hilo")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("CatalogTipo");
                });

            modelBuilder.Entity("APPLICATION.CORE.Entities.ComprasAgregadas.Compra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("IdentityGuid");

                    b.HasKey("Id");

                    b.ToTable("Compras");
                });

            modelBuilder.Entity("APPLICATION.CORE.Entities.ComprasAgregadas.MetodoPagamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alias");

                    b.Property<string>("CartaoId");

                    b.Property<int?>("CompraId");

                    b.Property<string>("Ultimo4");

                    b.HasKey("Id");

                    b.HasIndex("CompraId");

                    b.ToTable("MetodoPagamento");
                });

            modelBuilder.Entity("APPLICATION.CORE.Entities.PedidoAgregado.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompraId");

                    b.Property<DateTimeOffset>("PedidoData");

                    b.HasKey("Id");

                    b.ToTable("Pedido");
                });

            modelBuilder.Entity("APPLICATION.CORE.Entities.PedidoAgregado.PedidoItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("PedidoId");

                    b.Property<decimal>("PrecoUnitario");

                    b.Property<int>("Unidades");

                    b.HasKey("Id");

                    b.HasIndex("PedidoId");

                    b.ToTable("PedidoItem");
                });

            modelBuilder.Entity("APPLICATION.CORE.Entities.CarrinhoAgregado.CarrinhoItem", b =>
                {
                    b.HasOne("APPLICATION.CORE.Entities.CarrinhoAgregado.Carrinho")
                        .WithMany("Items")
                        .HasForeignKey("CarrinhoId");
                });

            modelBuilder.Entity("APPLICATION.CORE.Entities.CatalogoItem", b =>
                {
                    b.HasOne("APPLICATION.CORE.Entities.CatalogoMarca", "CatalogoMarca")
                        .WithMany()
                        .HasForeignKey("CatalogoMarcaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("APPLICATION.CORE.Entities.CatalogoTipo", "CatalogoTipo")
                        .WithMany()
                        .HasForeignKey("CatalogoTipoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("APPLICATION.CORE.Entities.ComprasAgregadas.MetodoPagamento", b =>
                {
                    b.HasOne("APPLICATION.CORE.Entities.ComprasAgregadas.Compra")
                        .WithMany("MetodosPagamentos")
                        .HasForeignKey("CompraId");
                });

            modelBuilder.Entity("APPLICATION.CORE.Entities.PedidoAgregado.Pedido", b =>
                {
                    b.OwnsOne("APPLICATION.CORE.Entities.PedidoAgregado.Endereco", "ShipToEndereco", b1 =>
                        {
                            b1.Property<int?>("PedidoId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("CEP");

                            b1.Property<string>("Cidade");

                            b1.Property<string>("Estado");

                            b1.Property<string>("Logradouro");

                            b1.Property<string>("Pais");

                            b1.ToTable("Pedido");

                            b1.HasOne("APPLICATION.CORE.Entities.PedidoAgregado.Pedido")
                                .WithOne("ShipToEndereco")
                                .HasForeignKey("APPLICATION.CORE.Entities.PedidoAgregado.Endereco", "PedidoId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });

            modelBuilder.Entity("APPLICATION.CORE.Entities.PedidoAgregado.PedidoItem", b =>
                {
                    b.HasOne("APPLICATION.CORE.Entities.PedidoAgregado.Pedido")
                        .WithMany("PedidoItems")
                        .HasForeignKey("PedidoId");

                    b.OwnsOne("APPLICATION.CORE.Entities.PedidoAgregado.CatalogoItemPedido", "ItemPedido", b1 =>
                        {
                            b1.Property<int?>("PedidoItemId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<int>("CatalogoItemId");

                            b1.Property<string>("FotoUri");

                            b1.Property<string>("ProdutoNome");

                            b1.ToTable("PedidoItem");

                            b1.HasOne("APPLICATION.CORE.Entities.PedidoAgregado.PedidoItem")
                                .WithOne("ItemPedido")
                                .HasForeignKey("APPLICATION.CORE.Entities.PedidoAgregado.CatalogoItemPedido", "PedidoItemId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
